require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const mongoose = require('mongoose');
const {handleComplaint, handleSuggestion, adminInterface, handleFAQ, deleteComplaint, getMainKeyboard } = require('./controllers/controllers');

const bot = new TelegramBot(process.env.TELEGRAM_TOKEN, { polling: true });

let userLanguage = {};

function showLanguageSelection(chatId) {
  const languageOptions = {
    reply_markup: {
      inline_keyboard: [
        [{ text: 'üá∫üá¶ UA', callback_data: 'lang_ua' }],
        [{ text: 'üá∫üá∏ EN', callback_data: 'lang_en' }]
      ]
    }
  };

  bot.sendMessage(chatId, `–û–±–µ—Ä—ñ—Ç—å –º–æ–≤—É / Choose your language:`, languageOptions);
}

bot.on('callback_query', async (callbackQuery) => {
  const msg = callbackQuery.message;
  const chatId = msg.chat.id;

  if (callbackQuery.data === 'lang_ua') {
    userLanguage[chatId] = 'ua';
    bot.sendMessage(
      chatId, 
      `–ü—Ä–∏–≤—ñ—Ç, ${msg.chat.first_name}! üëã\n\n–Ø –±–æ—Ç "–†—É–ø–æ—Ä –ö–ª—ñ—î–Ω—Ç–∞" –¥–ª—è –∑–∞–ª–∏—à–µ–Ω–Ω—è —Å–∫–∞—Ä–≥ –∞–±–æ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π.`,
      getMainKeyboard('ua')
    );
  } else if (callbackQuery.data === 'lang_en') {
    userLanguage[chatId] = 'en';
    bot.sendMessage(
      chatId, 
      `Hello ${msg.chat.first_name}! üëã\n\nI am a "Customer Mouthpiece" bot for leaving complaints or suggestions.`,
      getMainKeyboard('en')
    );
  }

  bot.answerCallbackQuery(callbackQuery.id);
});

bot.onText(/\/start/, (msg) => {
  showLanguageSelection(msg.chat.id);
});

bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const lang = userLanguage[chatId] || 'ua';

  if (msg.text === '–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ —Å–∫–∞—Ä–≥—É' || msg.text === 'Submit a Complaint') {
    handleComplaint(bot, msg, lang);
  } else if (msg.text === '–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—é' || msg.text === 'Submit a Suggestion') {
    handleSuggestion(bot, msg, lang);
  } else if (msg.text === '–ê–¥–º—ñ–Ω–∫–∞' || msg.text === 'Admin Panel') {
    adminInterface(bot, msg, lang);
  } else if (msg.text === '–í–∏–¥–∞–ª–∏—Ç–∏ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è' || msg.text === 'Delete a Submission') {
    deleteComplaint(bot, msg, lang);
  } else if (msg.text === 'FAQ') {
    handleFAQ(bot, msg, lang);
  } else if (msg.text === '–û–±–µ—Ä—ñ—Ç—å –º–æ–≤—É' || msg.text === 'Choose language') {
    showLanguageSelection(chatId);
  }
});

mongoose.connect(process.env.MONGODB_URI)
  .then(() => console.log('–ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB —É—Å–ø—ñ—à–Ω–µ'))
  .catch(err => console.error('–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB:', err));

bot.on('polling_error', (error) => {
  console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—ñ Telegram API:', error);
});

module.exports = bot;